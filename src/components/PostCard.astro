---
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';

interface Props {
  post: CollectionEntry<'posts'>;
  featured?: boolean;
}

const { post, featured = false } = Astro.props;
---

<a
  href={`/posts/${post.slug}`}
  class="group block overflow-hidden card card-elevated h-full"
>
  {
    post.data.coverImage && (
      <div class="relative overflow-hidden rounded-t-lg">
        <Image
          src={post.data.coverImage}
          alt={post.data.title}
          width={400}
          height={200}
          class="h-48 w-full object-cover transition-transform duration-300 group-hover:scale-105"
        />
        {/* Category badge overlay */}
        <div class="absolute top-3 left-3">
          <span
            class={`category-badge category-${post.data.category.toLowerCase()}`}
          >
            {post.data.category}
          </span>
        </div>

        {/* Featured badge */}
        {featured && (
          <div class="absolute top-3 right-3">
            <span class="bg-accent text-white px-2 py-1 rounded-full text-xs font-medium shadow-lg">
              Featured
            </span>
          </div>
        )}
      </div>
    )
  }

  <div class="p-6">
    <h3 class={`mb-3 font-semibold text-text-primary dark:text-gray-100 group-hover:text-primary transition-colors line-clamp-2 ${
      featured ? 'text-xl' : 'text-lg'
    }`}>
      {post.data.title}
    </h3>

    <p class="mb-4 text-sm text-text-secondary dark:text-gray-400 leading-relaxed line-clamp-3">
      {post.data.summary}
    </p>

    <div class="flex items-center justify-between text-xs text-text-muted dark:text-gray-500">
      <span>{new Date(post.data.publishedAt).toLocaleDateString('id-ID')}</span>
      <span>{post.data.readingTime} min read</span>
    </div>

    {/* Tags */}
    {post.data.tags.length > 0 && (
      <div class="mt-4 flex flex-wrap gap-2">
        {post.data.tags.slice(0, 3).map((tag) => (
          <span class="inline-block bg-gray-100 dark:bg-gray-800 text-text-muted dark:text-gray-400 px-2 py-1 rounded text-xs">
            #{tag}
          </span>
        ))}
      </div>
    )}
  </div>
</a>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Enhanced hover effects */
  .card:hover {
    transform: translateY(-2px);
  }

  .card-elevated:hover {
    box-shadow: 0 20px 25px rgba(0, 0, 0, 0.15);
  }

  /* Category badge styles */
  .category-ai {
    background-color: rgba(139, 92, 246, 0.1);
    color: hsl(270, 80%, 60%);
  }

  .category-cloud {
    background-color: rgba(59, 130, 246, 0.1);
    color: hsl(195, 80%, 50%);
  }

  .category-security {
    background-color: rgba(239, 68, 68, 0.1);
    color: hsl(0, 85%, 60%);
  }

  .category-devtools {
    background-color: rgba(34, 197, 94, 0.1);
    color: hsl(140, 70%, 45%);
  }

  .category-policy {
    background-color: rgba(251, 146, 60, 0.1);
    color: hsl(38, 90%, 55%);
  }

  /* Dark mode category styles */
  :global(.dark) .category-ai {
    background-color: rgba(139, 92, 246, 0.15);
    color: hsl(270, 80%, 70%);
  }

  :global(.dark) .category-cloud {
    background-color: rgba(59, 130, 246, 0.15);
    color: hsl(195, 80%, 60%);
  }

  :global(.dark) .category-security {
    background-color: rgba(239, 68, 68, 0.15);
    color: hsl(0, 85%, 70%);
  }

  :global(.dark) .category-devtools {
    background-color: rgba(34, 197, 94, 0.15);
    color: hsl(140, 70%, 55%);
  }

  :global(.dark) .category-policy {
    background-color: rgba(251, 146, 60, 0.15);
    color: hsl(38, 90%, 65%);
  }

  /* Category badge hover animation */
  .category-badge {
    transition: all 0.2s ease-in-out;
  }

  .category-badge:hover {
    transform: scale(1.05);
  }
</style>
